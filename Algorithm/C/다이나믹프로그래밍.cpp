//다이나믹 프로그래밍 
//많이 출제가 된다.
//하나의 문제는 단 한번만 풀도록 하는 알고리즘
//DP == 동적 계획법
//반복은 위험하다: 피보나치 수열은 반으로 쪼개면 문제가 발생할 수 있다.
//동일한 요소를 반복 계산하는  일이 발생한다.
//큰문제를 작은 문제로 나눌 수 있다.
//작은 문제에서 구한 정답은 그것을 포함하는 큰 문제에서도 동일하다 == 이것이 핵심
//이미 구한 답을 잠시 저장하는 과정을 메모이제이션이라고 한다.
//한번 구한 이후에는 이미 구한 값을 반환만 하면 된다. 
//시간 복잡도 O(n) //내려갈때마다 1개씩 n번 //기존에는 O(2^n) 

#include<stdio.h>

int d[100]; //값을 담는다 

int dp(int x) {
	if(x==1) return 1; //피보나치 초기값 설정 
	if(x==2) return 2;
	if(d[x] !=0) return d[x]; //이미 구한 값이면 반환한다. 
	return d[x] = dp(x-1) + dp(x-2);
}

int main(void) {
	printf("%d", dp(40));
}


