//삽입 정렬
//삽입 정렬은 각 숫자를 적절한 위치에 삽입하는 방법으로 문제를 해결한다.
//적절한 위치란 필요할 때만 위치를 바꾸게 된다
//버블 정렬과 삽입 정렬보다 빠르다. 
//앞은 이미 정렬이 되어 있기 때문에 연산이 더 적게 들어가게 된다.
//거의 정렬된 상태에서는 가장 효율적인 알고리즘이다. 소모하는 연산이 적기 때문이다. 
//시간복잡도 O(N^2)
#include<stdio.h>

int main(void){
	int i, j, temp; 
	int array[10] = {1, 10, 5, 8, 7, 6, 4, 3, 2, 9};
	//왼쪽에 있는 숫자가 더 크면 위치를 바꾸어주고 더이상 크지 않다면 거기서 while문이 false가 떠서 중지되게 된다. 
	//왼쪽은 항상 정렬이 되어 있다고 가정하기 때문에 자기가 왼쪽보다 크다면 거기서 멈추면 된다는게 장점
	//자신이 멈출 위치를 알고 있다. 
	for(i=0; i<9; i++){
		j = i;
		while(array[j] > array[j+1]){
			temp = array[j];
			array[j] = array[j+1];
			array[j+1] = temp;
			j--;
		}
	}
	
	for(i=0; i<10; i++){
		printf("%d\n", array[i]);
	}
	
	return 0;
}
